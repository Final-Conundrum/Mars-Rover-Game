
**	GITHUB GROUND RULES	**

>>	  Final Conundrum	<<
	
>>>>	  Prone to edits	<<<<

> Last edited 23/4/21 <


==== SETTING UP REPO ====

1. 	Begin with cloning the repo to a local folder, preferrably close to the desktop to avoid a "too long" file address error.

2. 	Use Unity to open the project folder "MarsRoverCapstone_Prototype". Now you can access the Unity project.


==== BRANCHES ====
1. There is 6 branches: 
	>	Main/Master where the shared game progress is stored. 
	>	Individual branches for all 4 members.
	>	Final: For the approved game build with minimal bugs and more polish.

2. 	MAKE YOUR DEVELOPMENT IN YOUR OWN BRANCH. This is important to allow you to push your new changes and fixes to your own problems before sharing it to Master.


>> MERGING BRANCHES <<

3. 	Stay up-to-date, so see if Master has been updated, check the details of the new COMMITS in Master and if they involve files that you have been editing in your branch. 

If so, be prepared to choose a branch to overwrite when you recieve the Merge conflict error. Ask the team if its important to keep Masters version over your own. 

	If YES = Then save your edits to that file in a seperate doc and copy-paste them in after resolving the merge conflict (choosing the Master file).

	If NO = Choose your file in the merge conflict.

4. CLOSE Unity while merging/switching branches, Unity tends to automatically make unneccessary updates to files that will make things a hassle while you deal with merge errors, etc.


==== PUSHING ====

1. 	When you have made a sum of changes (similar in focus) within the unity project, push those changes to the branch.

2.	Push changes with an appropriate comment describing whats included. 

3. 	Try to avoid pushing a LARGE sum of changes in the one commit. That will make it a hassle if you need to revert changes.



==== FILE EDITING AND DEV WORK ====

1. Each team member should never be working in the same files simultaneously to avoid merge conflicts. Allocate files alongside the tasks behind them.


